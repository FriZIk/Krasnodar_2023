{"ast":null,"code":"// import { tSCallSignatureDeclaration } from '@babel/types';\n// import { looseIndexOf } from '@vue/shared';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      clients: [],\n      // Список клиентов\n      sw_description: [],\n      // Содержимое sw_description\n      hw_revision: [],\n      // Содержимое hw_revision\n      update_log: [],\n      // Лог установки обновлений\n      updates: [],\n      // Список доступных обновлений\n      update_packet: [],\n      packet_of_all_updates: [],\n      errors: []\n    };\n  },\n  // Получение клиентов с сервера\n  // created() {\n  //   axios.get(`http://83.221.202.194:2600/api/get_clients`)\n  //     .then(response => {\n  //       this.clients = response.data\n  //       console.log(response.data)\n  //       console.log(this.getElementById(\"checkboxUpdater\").value);\n  //     })\n  //     .catch(e => {\n  //       this.errors.push(e)\n  //     })\n  // },\n\n  methods: {\n    // Функция для получения SwDesctiption для конкретного пользователя\n    GetConfigurationFile(clientName, clientId, targetFile) {\n      console.log(clientName + '#' + clientId + ' ' + targetFile);\n\n      // Получаем строку с именем и номером обновления пользователя\n      let buffer_str = \"\";\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName)) {\n          buffer_str = this.packet_of_all_updates[i];\n          break;\n        }\n      }\n      buffer_str = buffer_str.split(' ');\n      console.log(buffer_str);\n\n      // Делаем запрос на сервер для получение содержимого swdescription\n      axios.get(\"http://83.221.202.194:2600/api/get_configuration_file?client=\" + buffer_str[0] + \"&update=\" + buffer_str[1] + \"&id=\" + buffer_str[2] + \"&file=\" + targetFile).then(response => {\n        console.log(response);\n        if (targetFile == \"hwrevision\") {\n          this.hw_revision = response.data;\n        }\n        if (targetFile == \"sw-description\") {\n          this.sw_description = response.data;\n        }\n      }).catch(errors => {\n        console.log(errors); // Errors\n      });\n    },\n\n    // Функция формирования пакетного обновления\n\n    // Функция для проверки есть ли клиент в списке обновлений\n    checkUpdatePacket: function (clientName) {\n      let triger = true;\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          triger = false;\n          break;\n        }\n      }\n      // console.log(clientName + ':' + marker);\n      return triger;\n    },\n    // Функция для отчистки списка обновлений\n    ClearUpdatePacket() {\n      this.packet_of_all_updates = [];\n      return 'kek';\n    },\n    // Функция для отображения выбранного обновления\n    getUpdateForCurrentUser(clientName) {\n      let current_update = \"\";\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          current_update = this.packet_of_all_updates[i];\n          break;\n        } else current_update = \"\";\n      }\n      current_update = current_update.split(' ');\n      console.log(current_update[1]);\n      return current_update[1];\n    }\n  },\n  computed: {}\n};","map":{"version":3,"names":["axios","data","clients","sw_description","hw_revision","update_log","updates","update_packet","packet_of_all_updates","errors","methods","GetConfigurationFile","clientName","clientId","targetFile","console","log","buffer_str","i","length","includes","split","get","then","response","catch","checkUpdatePacket","triger","ClearUpdatePacket","getUpdateForCurrentUser","current_update","computed"],"sources":["/home/frizik/projects/Aquarium_logistics/hackaton_front/logistics/src/views/DataView.vue"],"sourcesContent":["<template>\n  <!-- Таблица с клиентами и их параметрами -->\n  <h1>Список клиентов</h1>\n\n  <!-- Кнопки для обновления  клиентов -->\n  <div style=\"text-align:left; margin-bottom: 10px;\">\n    <div class=\"d-grid gap-2 d-md-block \">\n      <a class=\"btn btn-warning mr-2 me-md-2\" href=\"#\" id=\"navbarDarkDropdownMenuLink\" role=\"button\"\n        aria-expanded=\"false\" v-on:click=\"ClearUpdatePacket()\">\n        Сбросить выбранные\n      </a>\n\n      <a class=\"btn btn-success mr-2 me-md-2\" href=\"#\" id=\"navbarDarkDropdownMenuLink\" role=\"button\"\n        aria-expanded=\"false\" data-bs-toggle=\"modal\" data-bs-target=\"#updateModal\">\n        Обновить выбранные\n      </a>\n    </div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <table class=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Класс обслуживания</th>\n          <th scope=\"col\">Дата отбытия</th>\n          <th scope=\"col\">Станция отбытия</th>\n          <th scope=\"col\">Станция прибытия</th>\n          <th scope=\"col\">Количество мест</th>\n          <th scope=\"col\">Номер поезда</th>\n          <!-- <th scope=\"col\">Действие</th> -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"client in clients\" :key=\"client.id\">\n          <td>{{ client.id }}</td>\n          <td>{{ client.name }}</td>\n          <td>{{ client.ip }}</td>\n          <td>\n            <div v-if=\"client.confirm === 'regular'\">\n              <h4><span class=\"badge bg-info\">{{ client.confirm }}</span></h4>\n            </div>\n            <div v-if=\"client.confirm === 'failed'\">\n              <h4><span class=\"badge bg-danger\">{{ client.confirm }}</span></h4>\n            </div>\n            <div v-if=\"client.confirm === 'correc'\">\n              <h4><span class=\"badge bg-success\">{{ client.confirm }}</span></h4>\n            </div>\n          </td>\n          <td>\n            <!-- Список обновлений для каждого клиента -->\n            <a class=\"btn btn-success\" href=\"#\" id=\"navbarDarkDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\"\n              aria-expanded=\"false\">\n              <!-- Доступные обновления -->\n              <div v-if=\"getUpdateForCurrentUser(client.name) == undefined\">\n                Доступные обновления\n              </div>\n              <div v-else>\n                {{getUpdateForCurrentUser(client.name)}}\n              </div>\n            </a>\n            <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDarkDropdownMenuLink\">\n              <div class=\"overflow-auto\">\n                <div v-if=\"client.updates != 0\">\n                  <div v-for=\"update in client.updates\" v-bind:key=\"update\">\n                    <a class=\"btn btn-secondary\" data-bs-toggle=\"collapse\"\n                      v-on:click=\"AddUpdateToPacketFront(client.name, update, client.id)\" role=\"button\" aria-expanded=\"false\"\n                      aria-controls=\"collapseLog\">{{ update }}</a>\n                  </div>\n                </div>\n                <div v-else>\n                  Нет доступных обновлений\n                </div>\n              </div>\n            </ul>\n          </td>\n\n          <td>\n            <button :disabled=\"checkUpdatePacket(client.name)\" type=\"button\"\n              v-on:click=\"GetConfigurationFile(client.name, client.id,'hwrevision')\" class=\"btn btn-secondary\"\n              data-bs-toggle=\"modal\" data-bs-target=\"#showHwrevision\">\n              Ознакомиться\n            </button>\n          </td>\n          <td>\n            <button :disabled=\"checkUpdatePacket(client.name)\" type=\"button\"\n              v-on:click=\"GetConfigurationFile(client.name, client.id, 'sw-description')\" class=\"btn btn-warning\"\n              data-bs-toggle=\"modal\" data-bs-target=\"#showSwdescription\">\n              Ознакомиться\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <!-- Модальное окно с содержимым Hwrevision -->\n  <div class=\"modal fade\" id=\"showHwrevision\" tabindex=\"-1\" aria-labelledby=\"ModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Содержимое Hwrevision</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <pre><code>\n          {{ hw_revision}}\n        </code></pre>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Закрыть</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Модальное окно с содержимым sw-description -->\n  <div class=\"modal fade\" id=\"showSwdescription\" tabindex=\"-1\" aria-labelledby=\"ModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Содержимое Sw-description</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <pre><code>\n          {{ sw_description }}\n          </code></pre>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Закрыть</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Модальное окно для функции обновления -->\n  <div class=\"modal fade\" id=\"updateModal\" tabindex=\"-1\" aria-labelledby=\"ModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Подтверждение обновления</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          Вы действительно хотите обновить программное обеспечение? Пожалуйста подтвердите.\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Закрыть</button>\n          <button type=\"button\" v-on:click=\"ClientUpdate()\" class=\"btn btn-primary\"\n            data-bs-dismiss=\"modal\">Обновить</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\n// import { tSCallSignatureDeclaration } from '@babel/types';\n// import { looseIndexOf } from '@vue/shared';\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      clients: [],        // Список клиентов\n      sw_description: [], // Содержимое sw_description\n      hw_revision: [],    // Содержимое hw_revision\n      update_log: [],     // Лог установки обновлений\n      updates: [],        // Список доступных обновлений\n      update_packet: [],\n      packet_of_all_updates: [],\n      errors: []\n    }\n  },\n\n  // Получение клиентов с сервера\n  // created() {\n  //   axios.get(`http://83.221.202.194:2600/api/get_clients`)\n  //     .then(response => {\n  //       this.clients = response.data\n  //       console.log(response.data)\n  //       console.log(this.getElementById(\"checkboxUpdater\").value);\n  //     })\n  //     .catch(e => {\n  //       this.errors.push(e)\n  //     })\n  // },\n\n  methods: {\n\n    // Функция для получения SwDesctiption для конкретного пользователя\n    GetConfigurationFile(clientName, clientId, targetFile) {\n      console.log(clientName + '#' + clientId + ' ' + targetFile);\n\n      // Получаем строку с именем и номером обновления пользователя\n      let buffer_str = \"\";\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName)) {\n          buffer_str = this.packet_of_all_updates[i];\n          break;\n        }\n      }\n      buffer_str = buffer_str.split(' ');\n      console.log(buffer_str);\n\n      // Делаем запрос на сервер для получение содержимого swdescription\n      axios.get(\"http://83.221.202.194:2600/api/get_configuration_file?client=\" + buffer_str[0]+ \"&update=\" + buffer_str[1] + \"&id=\" + buffer_str[2] + \"&file=\" + targetFile)\n        .then((response) => {\n          console.log(response);\n          if (targetFile == \"hwrevision\") {\n            this.hw_revision = response.data;\n          }\n          if (targetFile == \"sw-description\") {\n            this.sw_description = response.data;\n          }\n        })\n        .catch((errors) => {\n          console.log(errors); // Errors\n        });\n    },\n\n\n    // Функция формирования пакетного обновления\n\n\n    // Функция для проверки есть ли клиент в списке обновлений\n    checkUpdatePacket: function (clientName) {\n      let triger = true;\n\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          triger = false;\n          break;\n        }\n      }\n      // console.log(clientName + ':' + marker);\n      return triger;\n    },\n\n    // Функция для отчистки списка обновлений\n    ClearUpdatePacket(){\n      this.packet_of_all_updates = [];\n      return 'kek';\n    },\n\n    // Функция для отображения выбранного обновления\n    getUpdateForCurrentUser(clientName){\n      let current_update = \"\";\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          current_update = this.packet_of_all_updates[i];\n          break;\n        }\n        else current_update = \"\";\n      }\n      current_update = current_update.split(' ');\n      console.log(current_update[1]);\n      return current_update[1];\n    },\n\n  },\n  computed: {\n  }\n};\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}