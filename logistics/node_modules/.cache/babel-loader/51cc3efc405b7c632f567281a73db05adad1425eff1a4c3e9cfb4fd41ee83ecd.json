{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      clients: [] // Список клиентов\n    };\n  },\n\n  // Получение клиентов с сервера\n  created() {\n    axios.get(`http://83.221.202.194:2500/backapi/tickets`).then(response => {\n      this.clients = response.data;\n      console.log(response.data);\n      console.log(this.getElementById(\"checkboxUpdater\").value);\n    }).catch(e => {\n      this.errors.push(e);\n    });\n  },\n  methods: {\n    // Функция для получения SwDesctiption для конкретного пользователя\n    GetConfigurationFile(clientName, clientId, targetFile) {\n      console.log(clientName + '#' + clientId + ' ' + targetFile);\n\n      // Получаем строку с именем и номером обновления пользователя\n      let buffer_str = \"\";\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName)) {\n          buffer_str = this.packet_of_all_updates[i];\n          break;\n        }\n      }\n      buffer_str = buffer_str.split(' ');\n      console.log(buffer_str);\n\n      // Делаем запрос на сервер для получение содержимого swdescription\n      axios.get(\"http://83.221.202.194:2500/backapi/tickets\").then(response => {\n        console.log(response);\n        if (targetFile == \"hwrevision\") {\n          this.hw_revision = response.data;\n        }\n        if (targetFile == \"sw-description\") {\n          this.sw_description = response.data;\n        }\n      }).catch(errors => {\n        console.log(errors); // Errors\n      });\n    },\n\n    // Функция для проверки есть ли клиент в списке обновлений\n    checkUpdatePacket: function (clientName) {\n      let triger = true;\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          triger = false;\n          break;\n        }\n      }\n      // console.log(clientName + ':' + marker);\n      return triger;\n    },\n    // Функция для отчистки списка обновлений\n    ClearUpdatePacket() {\n      this.packet_of_all_updates = [];\n      return 'kek';\n    },\n    // Функция для отображения выбранного обновления\n    getUpdateForCurrentUser(clientName) {\n      let current_update = \"\";\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          current_update = this.packet_of_all_updates[i];\n          break;\n        } else current_update = \"\";\n      }\n      current_update = current_update.split(' ');\n      console.log(current_update[1]);\n      return current_update[1];\n    }\n  },\n  computed: {}\n};","map":{"version":3,"names":["axios","data","clients","created","get","then","response","console","log","getElementById","value","catch","e","errors","push","methods","GetConfigurationFile","clientName","clientId","targetFile","buffer_str","i","packet_of_all_updates","length","includes","split","hw_revision","sw_description","checkUpdatePacket","triger","ClearUpdatePacket","getUpdateForCurrentUser","current_update","computed"],"sources":["/home/frizik/projects/Aquarium_logistics/hackaton_front/logistics/src/views/DataView.vue"],"sourcesContent":["<template>\n  <!-- Таблица с клиентами и их параметрами -->\n  <h1>Данные</h1>\n\n  <!-- Кнопки для обновления  клиентов -->\n  <div style=\"text-align:right; margin-bottom: 10px;  margin-bottom: 10px;\">\n    <div class=\"d-grid gap-2 d-md-block \">\n      <a class=\"btn btn-warning mr-2 me-md-2\" href=\"#\" id=\"navbarDarkDropdownMenuLink\" role=\"button\"\n        aria-expanded=\"false\" v-on:click=\"ClearUpdatePacket()\">\n        Добавить\n      </a>\n      <a class=\"btn btn-danger mr-2 me-md-2\" href=\"#\" id=\"navbarDarkDropdownMenuLink\" role=\"button\"\n        aria-expanded=\"false\" data-bs-toggle=\"modal\" data-bs-target=\"#updateModal\">\n        Удалить\n      </a>\n      <a class=\"btn btn-success mr-2 me-md-2\" href=\"#\" id=\"navbarDarkDropdownMenuLink\" role=\"button\"\n        aria-expanded=\"false\" data-bs-toggle=\"modal\" data-bs-target=\"#updateModal\">\n        Экспорт\n      </a>\n      <a class=\"btn btn-info mr-2 me-md-2\" href=\"#\" id=\"navbarDarkDropdownMenuLink\" role=\"button\"\n        aria-expanded=\"false\" data-bs-toggle=\"modal\" data-bs-target=\"#updateModal\">\n        Импорт\n      </a>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <table class=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Класс обслуживания</th>\n          <th scope=\"col\">Дата отбытия</th>\n          <th scope=\"col\">Станция отбытия</th>\n          <th scope=\"col\">Станция прибытия</th>\n          <th scope=\"col\">Количество мест</th>\n          <th scope=\"col\">Номер поезда</th>\n          <th scope=\"col\">Расстоние</th>\n          <th scope=\"col\">Стоимость билета</th>\n          <th scope=\"col\">Стоимость плацкарта</th>\n          <th scope=\"col\">Стоимость обслуживания</th>\n          <!-- <th scope=\"col\">Действие</th> -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"client in clients\" :key=\"client.id\">\n          <td>{{ client.id }}</td>\n          <td>{{ client.name }}</td>\n          <td>{{ client.ip }}</td>\n          <td>{{ client.id }}</td>\n          <td>{{ client.name }}</td>\n          <td>{{ client.ip }}</td>\n          <td>{{ client.id }}</td>\n          <td>{{ client.name }}</td>\n          <td>{{ client.ip }}</td>\n          <td>{{ client.id }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      clients: [],        // Список клиентов\n    }\n  },\n\n  // Получение клиентов с сервера\n  created() {\n    axios.get(`http://83.221.202.194:2500/backapi/tickets`)\n      .then(response => {\n        this.clients = response.data\n        console.log(response.data)\n        console.log(this.getElementById(\"checkboxUpdater\").value);\n      })\n      .catch(e => {\n        this.errors.push(e)\n      })\n  },\n\n  methods: {\n\n    // Функция для получения SwDesctiption для конкретного пользователя\n    GetConfigurationFile(clientName, clientId, targetFile) {\n      console.log(clientName + '#' + clientId + ' ' + targetFile);\n\n      // Получаем строку с именем и номером обновления пользователя\n      let buffer_str = \"\";\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName)) {\n          buffer_str = this.packet_of_all_updates[i];\n          break;\n        }\n      }\n      buffer_str = buffer_str.split(' ');\n      console.log(buffer_str);\n\n      // Делаем запрос на сервер для получение содержимого swdescription\n      axios.get(\"http://83.221.202.194:2500/backapi/tickets\")\n        .then((response) => {\n          console.log(response);\n          if (targetFile == \"hwrevision\") {\n            this.hw_revision = response.data;\n          }\n          if (targetFile == \"sw-description\") {\n            this.sw_description = response.data;\n          }\n        })\n        .catch((errors) => {\n          console.log(errors); // Errors\n        });\n    },\n\n    // Функция для проверки есть ли клиент в списке обновлений\n    checkUpdatePacket: function (clientName) {\n      let triger = true;\n\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          triger = false;\n          break;\n        }\n      }\n      // console.log(clientName + ':' + marker);\n      return triger;\n    },\n\n    // Функция для отчистки списка обновлений\n    ClearUpdatePacket(){\n      this.packet_of_all_updates = [];\n      return 'kek';\n    },\n\n    // Функция для отображения выбранного обновления\n    getUpdateForCurrentUser(clientName){\n      let current_update = \"\";\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          current_update = this.packet_of_all_updates[i];\n          break;\n        }\n        else current_update = \"\";\n      }\n      current_update = current_update.split(' ');\n      console.log(current_update[1]);\n      return current_update[1];\n    },\n\n  },\n  computed: {\n  }\n};\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}