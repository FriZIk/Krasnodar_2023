{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { tSCallSignatureDeclaration } from '@babel/types';\n// import { looseIndexOf } from '@vue/shared';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      clients: [],\n      // Список клиентов\n      sw_description: [],\n      // Содержимое sw_description\n      hw_revision: [],\n      // Содержимое hw_revision\n      update_log: [],\n      // Лог установки обновлений\n      updates: [],\n      // Список доступных обновлений\n      update_packet: [],\n      packet_of_all_updates: [],\n      errors: []\n    };\n  },\n  // Получение клиентов с сервера\n  // created() {\n  //   axios.get(`http://83.221.202.194:2600/api/get_clients`)\n  //     .then(response => {\n  //       this.clients = response.data\n  //       console.log(response.data)\n  //       console.log(this.getElementById(\"checkboxUpdater\").value);\n  //     })\n  //     .catch(e => {\n  //       this.errors.push(e)\n  //     })\n  // },\n\n  methods: {\n    // Функция для получения SwDesctiption для конкретного пользователя\n    GetConfigurationFile(clientName, clientId, targetFile) {\n      console.log(clientName + '#' + clientId + ' ' + targetFile);\n\n      // Получаем строку с именем и номером обновления пользователя\n      let buffer_str = \"\";\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName)) {\n          buffer_str = this.packet_of_all_updates[i];\n          break;\n        }\n      }\n      buffer_str = buffer_str.split(' ');\n      console.log(buffer_str);\n\n      // Делаем запрос на сервер для получение содержимого swdescription\n      axios.get(\"http://83.221.202.194:2600/api/get_configuration_file?client=\" + buffer_str[0] + \"&update=\" + buffer_str[1] + \"&id=\" + buffer_str[2] + \"&file=\" + targetFile).then(response => {\n        console.log(response);\n        if (targetFile == \"hwrevision\") {\n          this.hw_revision = response.data;\n        }\n        if (targetFile == \"sw-description\") {\n          this.sw_description = response.data;\n        }\n      }).catch(errors => {\n        console.log(errors); // Errors\n      });\n    },\n\n    // Функция обновления клиента\n    ClientUpdate() {\n      console.log(this.packet_of_all_updates);\n      if (this.packet_of_all_updates.length != 0) {\n        axios.get(\"http://83.221.202.194:2600/api/update_packet?updates=\" + this.packet_of_all_updates).then(response => {\n          console.log(response);\n          this.update_log = this.update_log + response.data;\n\n          // Cохраняем лог в storage\n          this.$store.commit('change_log', {\n            data: this.update_log\n          });\n          console.log('Лог был изменён');\n          console.log(this.$store.state.logs[0].data);\n\n          // Чистим старый пакет обновлений\n          console.log(\"До отчистки\" + this.packet_of_all_updates);\n          this.packet_of_all_updates = [];\n          console.log(\"После отчистки\" + this.packet_of_all_updates);\n        }).catch(errors => {\n          console.log(errors); // Errors\n        });\n      }\n    },\n\n    // Функция формирования пакетного обновления\n    AddUpdateToPacketFront(clientName, updatePacket, clientId) {\n      // console.log(\"Новое обновление:\" + clientName + \" \" + updatePacket)\n      let update = clientName + ' ' + updatePacket + ' ' + clientId;\n\n      // Проверка на уникального пользователя\n      let triger_1 = true;\n      let index = 0;\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          triger_1 = false;\n          index = i;\n          break;\n        }\n      }\n\n      // Проверка на то, что такого обновления ещё нет\n      let triger_2 = true;\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (update == this.packet_of_all_updates[i]) {\n          triger_2 = false;\n          break;\n        }\n      }\n\n      // Финальное сравнение и принятие решения\n      if (triger_1 == true && triger_2 == true) {\n        this.packet_of_all_updates.push(update);\n      }\n      if (triger_1 == false && triger_2 == true) {\n        this.packet_of_all_updates[index] = update;\n      }\n      console.log(\"Все обновления:\" + this.packet_of_all_updates + '\\n');\n\n      // Формирование вывода в лог\n      let buffer_string = this.packet_of_all_updates.toString();\n      this.update_log = this.update_log + 'Настроены следующие обновления:' + buffer_string + '\\n';\n      this.$store.commit('change_log', {\n        data: this.update_log\n      });\n    },\n    // Функция для проверки есть ли клиент в списке обновлений\n    checkUpdatePacket: function (clientName) {\n      let triger = true;\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          triger = false;\n          break;\n        }\n      }\n      // console.log(clientName + ':' + marker);\n      return triger;\n    },\n    // Функция для отчистки списка обновлений\n    ClearUpdatePacket() {\n      this.packet_of_all_updates = [];\n      return 'kek';\n    },\n    // Функция для отображения выбранного обновления\n    getUpdateForCurrentUser(clientName) {\n      let current_update = \"\";\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          current_update = this.packet_of_all_updates[i];\n          break;\n        } else current_update = \"\";\n      }\n      current_update = current_update.split(' ');\n      console.log(current_update[1]);\n      return current_update[1];\n    }\n  },\n  computed: {}\n};","map":{"version":3,"names":["axios","data","clients","sw_description","hw_revision","update_log","updates","update_packet","packet_of_all_updates","errors","methods","GetConfigurationFile","clientName","clientId","targetFile","console","log","buffer_str","i","length","includes","split","get","then","response","catch","ClientUpdate","$store","commit","state","logs","AddUpdateToPacketFront","updatePacket","update","triger_1","index","triger_2","push","buffer_string","toString","checkUpdatePacket","triger","ClearUpdatePacket","getUpdateForCurrentUser","current_update","computed"],"sources":["/home/frizik/projects/Aquarium_logistics/hackaton_front/logistics/src/views/DataView.vue"],"sourcesContent":["<template>\n  <!-- Таблица с клиентами и их параметрами -->\n  <h1>Список клиентов</h1>\n\n  <!-- Кнопки для обновления  клиентов -->\n  <div style=\"text-align:left; margin-bottom: 10px;\">\n    <div class=\"d-grid gap-2 d-md-block \">\n      <a class=\"btn btn-warning mr-2 me-md-2\" href=\"#\" id=\"navbarDarkDropdownMenuLink\" role=\"button\"\n        aria-expanded=\"false\" v-on:click=\"ClearUpdatePacket()\">\n        Сбросить выбранные\n      </a>\n\n      <a class=\"btn btn-success mr-2 me-md-2\" href=\"#\" id=\"navbarDarkDropdownMenuLink\" role=\"button\"\n        aria-expanded=\"false\" data-bs-toggle=\"modal\" data-bs-target=\"#updateModal\">\n        Обновить выбранные\n      </a>\n    </div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <table class=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th scope=\"col\">ID</th>\n          <th scope=\"col\">Имя компьютера</th>\n          <th scope=\"col\">IP-адрес</th>\n          <th scope=\"col\">Статус</th>\n          <th scope=\"col\">Выбор обновления</th>\n          <th scope=\"col\">hwrevision</th>\n          <th scope=\"col\">sw-description</th>\n          <!-- <th scope=\"col\">Действие</th> -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"client in clients\" :key=\"client.id\">\n          <td>{{ client.id }}</td>\n          <td>{{ client.name }}</td>\n          <td>{{ client.ip }}</td>\n          <td>\n            <div v-if=\"client.confirm === 'regular'\">\n              <h4><span class=\"badge bg-info\">{{ client.confirm }}</span></h4>\n            </div>\n            <div v-if=\"client.confirm === 'failed'\">\n              <h4><span class=\"badge bg-danger\">{{ client.confirm }}</span></h4>\n            </div>\n            <div v-if=\"client.confirm === 'correc'\">\n              <h4><span class=\"badge bg-success\">{{ client.confirm }}</span></h4>\n            </div>\n          </td>\n          <td>\n            <!-- Список обновлений для каждого клиента -->\n            <a class=\"btn btn-success\" href=\"#\" id=\"navbarDarkDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\"\n              aria-expanded=\"false\">\n              <!-- Доступные обновления -->\n              <div v-if=\"getUpdateForCurrentUser(client.name) == undefined\">\n                Доступные обновления\n              </div>\n              <div v-else>\n                {{getUpdateForCurrentUser(client.name)}}\n              </div>\n            </a>\n            <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDarkDropdownMenuLink\">\n              <div class=\"overflow-auto\">\n                <div v-if=\"client.updates != 0\">\n                  <div v-for=\"update in client.updates\" v-bind:key=\"update\">\n                    <a class=\"btn btn-secondary\" data-bs-toggle=\"collapse\"\n                      v-on:click=\"AddUpdateToPacketFront(client.name, update, client.id)\" role=\"button\" aria-expanded=\"false\"\n                      aria-controls=\"collapseLog\">{{ update }}</a>\n                  </div>\n                </div>\n                <div v-else>\n                  Нет доступных обновлений\n                </div>\n              </div>\n            </ul>\n          </td>\n\n          <td>\n            <button :disabled=\"checkUpdatePacket(client.name)\" type=\"button\"\n              v-on:click=\"GetConfigurationFile(client.name, client.id,'hwrevision')\" class=\"btn btn-secondary\"\n              data-bs-toggle=\"modal\" data-bs-target=\"#showHwrevision\">\n              Ознакомиться\n            </button>\n          </td>\n          <td>\n            <button :disabled=\"checkUpdatePacket(client.name)\" type=\"button\"\n              v-on:click=\"GetConfigurationFile(client.name, client.id, 'sw-description')\" class=\"btn btn-warning\"\n              data-bs-toggle=\"modal\" data-bs-target=\"#showSwdescription\">\n              Ознакомиться\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <!-- Модальное окно с содержимым Hwrevision -->\n  <div class=\"modal fade\" id=\"showHwrevision\" tabindex=\"-1\" aria-labelledby=\"ModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Содержимое Hwrevision</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <pre><code>\n          {{ hw_revision}}\n        </code></pre>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Закрыть</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Модальное окно с содержимым sw-description -->\n  <div class=\"modal fade\" id=\"showSwdescription\" tabindex=\"-1\" aria-labelledby=\"ModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Содержимое Sw-description</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <pre><code>\n          {{ sw_description }}\n          </code></pre>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Закрыть</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Модальное окно для функции обновления -->\n  <div class=\"modal fade\" id=\"updateModal\" tabindex=\"-1\" aria-labelledby=\"ModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Подтверждение обновления</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          Вы действительно хотите обновить программное обеспечение? Пожалуйста подтвердите.\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Закрыть</button>\n          <button type=\"button\" v-on:click=\"ClientUpdate()\" class=\"btn btn-primary\"\n            data-bs-dismiss=\"modal\">Обновить</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Websocket log choose menu -->\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">Журналирование</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDarkDropdown\"\n        aria-controls=\"navbarNavDarkDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div class=\"collapse navbar-collapse\" id=\"navbarNavDarkDropdown\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDarkDropdownMenuLink\" role=\"button\"\n              data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              Клиенты\n            </a>\n            <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDarkDropdownMenuLink\">\n              <div class=\"overflow-auto\">\n                <tr v-for=\"client in clients\" :key=\"client.id\">\n                  <a class=\"btn btn-secondary\" data-bs-toggle=\"collapse\" href=\"#collapseLog\" role=\"button\"\n                    aria-expanded=\"false\" aria-controls=\"collapseLog\">{{ client.name }}#{{ client.ip }}\n                  </a>\n                </tr>\n              </div>\n            </ul>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n\n  <!-- Websocket log display -->\n  <div class=\"collapse in show\" id=\"collapseLog\">\n    <div class=\"overflow-y-auto\">\n      <div class=\"card card-body\">\n        <div style=\"height: 430px; weight: auto; overflow: scroll; background-color: #ffffff; \">\n          <pre><code>\n          {{ $store.state.logs[0].data }}\n        </code></pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n  <!-- Тест  storage -->\n\n</template>\n\n\n\n<script>\n// import { tSCallSignatureDeclaration } from '@babel/types';\n// import { looseIndexOf } from '@vue/shared';\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      clients: [],        // Список клиентов\n      sw_description: [], // Содержимое sw_description\n      hw_revision: [],    // Содержимое hw_revision\n      update_log: [],     // Лог установки обновлений\n      updates: [],        // Список доступных обновлений\n      update_packet: [],\n      packet_of_all_updates: [],\n      errors: []\n    }\n  },\n\n  // Получение клиентов с сервера\n  // created() {\n  //   axios.get(`http://83.221.202.194:2600/api/get_clients`)\n  //     .then(response => {\n  //       this.clients = response.data\n  //       console.log(response.data)\n  //       console.log(this.getElementById(\"checkboxUpdater\").value);\n  //     })\n  //     .catch(e => {\n  //       this.errors.push(e)\n  //     })\n  // },\n\n  methods: {\n\n    // Функция для получения SwDesctiption для конкретного пользователя\n    GetConfigurationFile(clientName, clientId, targetFile) {\n      console.log(clientName + '#' + clientId + ' ' + targetFile);\n\n      // Получаем строку с именем и номером обновления пользователя\n      let buffer_str = \"\";\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName)) {\n          buffer_str = this.packet_of_all_updates[i];\n          break;\n        }\n      }\n      buffer_str = buffer_str.split(' ');\n      console.log(buffer_str);\n\n      // Делаем запрос на сервер для получение содержимого swdescription\n      axios.get(\"http://83.221.202.194:2600/api/get_configuration_file?client=\" + buffer_str[0]+ \"&update=\" + buffer_str[1] + \"&id=\" + buffer_str[2] + \"&file=\" + targetFile)\n        .then((response) => {\n          console.log(response);\n          if (targetFile == \"hwrevision\") {\n            this.hw_revision = response.data;\n          }\n          if (targetFile == \"sw-description\") {\n            this.sw_description = response.data;\n          }\n        })\n        .catch((errors) => {\n          console.log(errors); // Errors\n        });\n    },\n\n    // Функция обновления клиента\n    ClientUpdate() {\n      console.log(this.packet_of_all_updates);\n      if(this.packet_of_all_updates.length != 0)\n      {\n      axios.get(\"http://83.221.202.194:2600/api/update_packet?updates=\"+this.packet_of_all_updates)\n        .then((response) => {\n          console.log(response);\n          this.update_log = this.update_log + response.data;\n\n          // Cохраняем лог в storage\n          this.$store.commit('change_log', {\n            data: this.update_log\n          })\n          console.log('Лог был изменён')\n          console.log(this.$store.state.logs[0].data);\n\n          // Чистим старый пакет обновлений\n          console.log(\"До отчистки\" + this.packet_of_all_updates)\n          this.packet_of_all_updates = [];\n          console.log(\"После отчистки\" + this.packet_of_all_updates)\n        })\n        .catch((errors) => {\n          console.log(errors); // Errors\n        });\n      }\n    },\n\n    // Функция формирования пакетного обновления\n    AddUpdateToPacketFront(clientName, updatePacket, clientId) {\n      // console.log(\"Новое обновление:\" + clientName + \" \" + updatePacket)\n      let update = clientName + ' ' + updatePacket + ' ' + clientId;\n\n      // Проверка на уникального пользователя\n      let triger_1 = true;\n      let index = 0;\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          triger_1 = false;\n          index = i;\n          break;\n        }\n      }\n\n      // Проверка на то, что такого обновления ещё нет\n      let triger_2 = true;\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (update == this.packet_of_all_updates[i]) {\n          triger_2 = false;\n          break;\n        }\n      }\n\n      // Финальное сравнение и принятие решения\n      if (triger_1 == true && triger_2 == true) {\n        this.packet_of_all_updates.push(update);\n      }\n      if (triger_1 == false && triger_2 == true) {\n        this.packet_of_all_updates[index] = update;\n      }\n\n      console.log(\"Все обновления:\" + this.packet_of_all_updates + '\\n')\n\n      // Формирование вывода в лог\n      let buffer_string = this.packet_of_all_updates.toString();\n      this.update_log = this.update_log + 'Настроены следующие обновления:' + buffer_string + '\\n';\n\n      this.$store.commit('change_log', {\n        data: this.update_log,\n      })\n    },\n\n    // Функция для проверки есть ли клиент в списке обновлений\n    checkUpdatePacket: function (clientName) {\n      let triger = true;\n\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          triger = false;\n          break;\n        }\n      }\n      // console.log(clientName + ':' + marker);\n      return triger;\n    },\n\n    // Функция для отчистки списка обновлений\n    ClearUpdatePacket(){\n      this.packet_of_all_updates = [];\n      return 'kek';\n    },\n\n    // Функция для отображения выбранного обновления\n    getUpdateForCurrentUser(clientName){\n      let current_update = \"\";\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          current_update = this.packet_of_all_updates[i];\n          break;\n        }\n        else current_update = \"\";\n      }\n      current_update = current_update.split(' ');\n      console.log(current_update[1]);\n      return current_update[1];\n    },\n\n  },\n  computed: {\n  }\n};\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}