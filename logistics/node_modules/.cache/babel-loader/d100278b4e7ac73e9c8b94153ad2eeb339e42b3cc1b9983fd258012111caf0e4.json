{"ast":null,"code":"import { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport { Colors } from 'chart.js';\nimport axios from 'axios';\nChartJS.register(Colors);\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  name: 'BarChart',\n  components: {\n    Bar\n  },\n  data() {\n    return {\n      chartData: {\n        labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Августа', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n        datasets: [{\n          data: [40, 20, 12]\n        }],\n        backgroundColor: [\"red\", \"blue\", \"green\"]\n      },\n      chartOptions: {\n        responsive: true\n      }\n    };\n  },\n  // Получение клиентов с сервера\n  created() {\n    axios.get(\"http://83.221.202.194:2500/backapi/getByMonth/\").then(response => {\n      console.log(response);\n      for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          triger_1 = false;\n          index = i;\n          break;\n        }\n      }\n      this.chartData.datasets;\n    }).catch(errors => {\n      console.log(errors); // Errors\n    });\n  },\n\n  methods: {}\n};","map":{"version":3,"names":["Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","Colors","axios","register","name","components","data","chartData","labels","datasets","backgroundColor","chartOptions","responsive","created","get","then","response","console","log","i","packet_of_all_updates","length","includes","clientName","triger_1","index","catch","errors","methods"],"sources":["/home/frizik/projects/Aquarium_logistics/hackaton_front/logistics/src/views/AnaliticsView.vue"],"sourcesContent":["<template>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-lg-4\">\n      <Bar id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\n    </div>\n    <div class=\"col-lg-4\">\n      <Bar id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\n    </div>\n    <div class=\"col-lg-4\">\n      <Bar id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\n    </div>\n    <div class=\"col-lg-4\">\n      <Bar id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\n    </div>\n    <div class=\"col-lg-4\">\n      <Bar id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\n    </div>\n    <div class=\"col-lg-4\">\n      <Bar id=\"my-chart-id\" :options=\"chartOptions\" :data=\"chartData\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Bar } from 'vue-chartjs'\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js'\nimport { Colors } from 'chart.js';\nimport axios from 'axios'\n\nChartJS.register(Colors);\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\nexport default {\n  name: 'BarChart',\n  components: { Bar },\n  data() {\n    return {\n      chartData: {\n        labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Августа', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n        datasets: [{ data: [40, 20, 12] }],\n        backgroundColor: [\"red\", \"blue\", \"green\"]\n      },\n      chartOptions: {\n        responsive: true\n      }\n    }\n  },\n\n  // Получение клиентов с сервера\n  created() {\n    axios.get(\"http://83.221.202.194:2500/backapi/getByMonth/\")\n        .then((response) => {\n          console.log(response);\n\n          for (let i = 0; i < this.packet_of_all_updates.length; i++) {\n        if (this.packet_of_all_updates[i].includes(clientName) == true) {\n          triger_1 = false;\n          index = i;\n          break;\n        }\n      }\n\n          this.chartData.datasets\n        })\n        .catch((errors) => {\n          console.log(errors); // Errors\n        })\n  },\n\n  methods: {\n\n  }\n}\n\n</script>"],"mappings":"AAwBA,SAASA,GAAE,QAAS,aAAY;AAChC,SAASC,KAAI,IAAKC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAU,QAAS,UAAS;AAC1G,SAASC,MAAK,QAAS,UAAU;AACjC,OAAOC,KAAI,MAAO,OAAM;AAExBR,OAAO,CAACS,QAAQ,CAACF,MAAM,CAAC;AACxBP,OAAO,CAACS,QAAQ,CAACR,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW;AAE/E,eAAe;EACbI,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IAAEb;EAAI,CAAC;EACnBc,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC;QAC7HC,QAAQ,EAAE,CAAC;UAAEH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;QAAE,CAAC,CAAC;QAClCI,eAAe,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO;MAC1C,CAAC;MACDC,YAAY,EAAE;QACZC,UAAU,EAAE;MACd;IACF;EACF,CAAC;EAED;EACAC,OAAOA,CAAA,EAAG;IACRX,KAAK,CAACY,GAAG,CAAC,gDAAgD,EACrDC,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MAErB,KAAK,IAAIG,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACC,qBAAqB,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;QAC9D,IAAI,IAAI,CAACC,qBAAqB,CAACD,CAAC,CAAC,CAACG,QAAQ,CAACC,UAAU,KAAK,IAAI,EAAE;UAC9DC,QAAO,GAAI,KAAK;UAChBC,KAAI,GAAIN,CAAC;UACT;QACF;MACF;MAEI,IAAI,CAACZ,SAAS,CAACE,QAAO;IACxB,CAAC,EACAiB,KAAK,CAAEC,MAAM,IAAK;MACjBV,OAAO,CAACC,GAAG,CAACS,MAAM,CAAC,EAAE;IACvB,CAAC;EACP,CAAC;;EAEDC,OAAO,EAAE,CAET;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}